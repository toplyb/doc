(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{454:function(s,t,a){"use strict";a.r(t);var e=a(51),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"使用sass"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用sass"}},[s._v("#")]),s._v(" 使用sass")]),s._v(" "),a("ul",[a("li",[s._v("由于在使用 "),a("code",[s._v("create-react-app")]),s._v(" 创建项目的时候, 内置已经配置好了 "),a("code",[s._v("sass")]),s._v(" 环境, 所以只需要使用 "),a("code",[s._v("npm i sass -D")]),s._v("  安装一下即可")]),s._v(" "),a("li",[s._v("如果想要使用 less, 则需要自己配置")])]),s._v(" "),a("h2",{attrs:{id:"css模块化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css模块化"}},[s._v("#")]),s._v(" css模块化")]),s._v(" "),a("ul",[a("li",[s._v("当使用 "),a("code",[s._v("import ./index.css")]),s._v(" 的方式导入 css 的时候, 如果整个 html 中有相同的类名, 则会引起样式覆盖冲突的问题, 所以这时可以使用以下方式导入")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// css 文件一般以 .module.css 结尾")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" classes "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./index.module.css'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("Index")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// box 是类名, index 是模块名, 最终显示在浏览器上的并不是 box, react 会对这个类名重新命名, 这样就防止了类名重复引起的问题")]),s._v("\n    \t"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("div className"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("classes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" Index\n")])])]),a("RightMenu")],1)}),[],!1,null,null,null);t.default=n.exports}}]);