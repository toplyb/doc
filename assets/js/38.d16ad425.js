(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{456:function(t,a,s){"use strict";s.r(a);var n=s(51),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),s("h4",{attrs:{id:"mb-substr"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mb-substr"}},[t._v("#")]),t._v(" "),s("code",[t._v("mb_substr")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("返回字符串中的一部分内容, 其中, "),s("code",[t._v("substr()")]),t._v("只针对英文字符, 如果是汉字的话, 则需要使用 "),s("code",[t._v("mb_substr()")])]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (string) mb_substr(string $str, int $start [, int $length = null, string $encoding = mb_internal_encoding()])")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mb_substr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'xiaosheng'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# iaosheng")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mb_substr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'xiaosheng'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ia")]),t._v("\n")])])])])])]),t._v(" "),s("h4",{attrs:{id:"str-pad"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#str-pad"}},[t._v("#")]),t._v(" "),s("code",[t._v("str_pad")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("使用指定字符串将另外一个字符串 (从左, 两边, 右) 填充到指定长度")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (string) str_pad(string $input, int $length, [string $string, $type]);")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# $string 表示要以什么字符串填充")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 其中 $type 有三种类型, STR_PAD_RIGHT, STR_PAD_LEFT, STR_PAD_BOTH, 如果没有指定的话, 默认是 STR_PAD_RIGHT")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 分别表示从左, 两边, 右填充")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'xiaosheng'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("str_pad")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$input")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 'xiaosheng'")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("str_pad")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$input")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 'xiaosheng'")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("str_pad")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$input")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'_'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 'xiaosheng____'")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("str_pad")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$input")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'_'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("STR_PAD_BOTH")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# '_xiaosheng__'")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("str_pad")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$input")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'_'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("STR_PAD_BOTH")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# '__xiaosheng__'")]),t._v("\n")])])])])])]),t._v(" "),s("h4",{attrs:{id:"hash-equals"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hash-equals"}},[t._v("#")]),t._v(" "),s("code",[t._v("hash_equals")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("防止时许攻击的字符串比较")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (bool) hash_equals($string, $input)")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# $string 是已知的, 比如一个要和另外一个字符串比较, 那么 $string 就表示另一个")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# $input 是用户输入的")]),t._v("\n")])])])])])]),t._v(" "),s("h2",{attrs:{id:"数字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数字"}},[t._v("#")]),t._v(" 数字")]),t._v(" "),s("h4",{attrs:{id:"random-int"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#random-int"}},[t._v("#")]),t._v(" "),s("code",[t._v("random_int")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("返回随机整数")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (int) random_int($min,$max)")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("random_int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])]),t._v(" "),s("h4",{attrs:{id:"array-flip"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-flip"}},[t._v("#")]),t._v(" "),s("code",[t._v("array_flip")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("反转数组中的键和值")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$array")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'name'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'xiaosheng'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print_r")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("array_flip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Array(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    [xiaosheng] => name")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# )")]),t._v("\n")])])])])])]),t._v(" "),s("h2",{attrs:{id:"数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),s("p",[s("code",[t._v("array_diff()")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("计算数组的差集")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (array) array_diff($array1, $array2, [...])")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比较 $array1 与后面其他数组的差别, 返回的是存在 $array1 但是不存在后面数组中的内容")]),t._v("\n")])])])])])]),t._v(" "),s("h4",{attrs:{id:"array-flip-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-flip-2"}},[t._v("#")]),t._v(" "),s("code",[t._v("array_flip")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("交换数组中的键值 (可以用来去除数组中重复的值)")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'xiaoming'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'xiaosheng'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'xiaolan'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("array_flip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print_r")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出结果为 :")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ['xiaoming' => 0,'xiaosheng' => 1,'xiaolan' => 2]")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#---------------------------------------------------------------------")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'name'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'xiaoming'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'age'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'old'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("array_flip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print_r")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出结果为 :")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ['xiaoming' => 'name',23 => 'old']")]),t._v("\n")])])])])])]),t._v(" "),s("h4",{attrs:{id:"array-push"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-push"}},[t._v("#")]),t._v(" "),s("code",[t._v("array_push")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("向数组中添加元素")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'xiaoming'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'xiaosheng'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'xiaolan'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("array_push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'xiaoli'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])]),t._v(" "),s("h4",{attrs:{id:"array-walk"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-walk"}},[t._v("#")]),t._v(" "),s("code",[t._v("array_walk")])]),t._v(" "),s("ul",[s("li",[t._v("给二维数组中所有的数组添加同样的字段")])]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'age'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$list")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'id'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'name'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'aaa'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'id'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'name'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'bbb'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'id'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'name'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'ccc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("array_walk")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$value")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("array_merge")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*['id'=>1,'name'=>'aaa','age' => 11],['id'=>2,'name'=>'bbb','age' => 11],['id'=>3,'name'=>'ccc','age' => 11]*/")]),t._v("\n")])])])]),s("h2",{attrs:{id:"条件运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#条件运算符"}},[t._v("#")]),t._v(" 条件运算符")]),t._v(" "),s("h4",{attrs:{id:"if"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#if"}},[t._v("#")]),t._v(" if")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2")]),t._v("\n")])])])]),s("h4",{attrs:{id:"三元运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三元运算符"}},[t._v("#")]),t._v(" 三元运算符")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以上可以简写为: \t$b = $a ? $a : '2';\t$b = $a ? : '2';\t# 最后结果都为2\t")]),t._v("\n")])])])]),s("h4",{attrs:{id:""}},[s("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")]),t._v(" ??")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t  "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("??")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 等同于 isset($a) ? $a : 0;\t# 结果为0")]),t._v("\n")])])])]),s("h4",{attrs:{id:"引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引用"}},[t._v("#")]),t._v(" & 引用")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t  "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此时, $a 和 $b 是指向了同一个内容, 他俩是完全相同的")]),t._v("\n")])])])]),s("h4",{attrs:{id:"和"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#和"}},[t._v("#")]),t._v(" == 和 ===")]),t._v(" "),s("ul",[s("li",[t._v("== : 对值的比较")]),t._v(" "),s("li",[t._v("=== : 对值和类型的比较")])]),t._v(" "),s("h2",{attrs:{id:"常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[t._v("#")]),t._v(" 常用命令")]),t._v(" "),s("h4",{attrs:{id:"echo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#echo"}},[t._v("#")]),t._v(" "),s("code",[t._v("echo()")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("eccho")]),t._v(" 是一种语言结构, 并不是真正的函数, 没有返回值")]),t._v(" "),s("li",[t._v("可以输出多个参数")]),t._v(" "),s("li",[t._v("如果输出内容中包含有变量, 需要用双引号来解析变量, 否则输出的是变量名, 而不是变量值")]),t._v(" "),s("li",[t._v("输出字符串, 数字")])]),t._v(" "),s("h4",{attrs:{id:"print"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#print"}},[t._v("#")]),t._v(" "),s("code",[t._v("print()")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("print()")]),t._v(" 是一种语言结构, 不用用括号包围参数")]),t._v(" "),s("li",[s("code",[t._v("print()")]),t._v(" 只支持一个参数")]),t._v(" "),s("li",[t._v("如果输出内容中包含有变量, 需要用引号来解析变量, 否则输出的是变量名, 而不是变量值")])]),t._v(" "),s("h4",{attrs:{id:"printf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#printf"}},[t._v("#")]),t._v(" "),s("code",[t._v("printf()")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("printf()")]),t._v(" 是一个函数, 返回一个格式化后的字符串")])]),t._v(" "),s("h4",{attrs:{id:"print-r"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#print-r"}},[t._v("#")]),t._v(" "),s("code",[t._v("print_r()")])]),t._v(" "),s("ul",[s("li",[t._v("是一个函数, 可以输出字符串, 数字, 数组")]),t._v(" "),s("li",[t._v("输出布尔值和 "),s("code",[t._v("null")]),t._v(" 没有意义, 因为都是打印 "),s("code",[t._v("\\n")])])]),t._v(" "),s("h4",{attrs:{id:"vam-dump"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vam-dump"}},[t._v("#")]),t._v(" "),s("code",[t._v("vam_dump()")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("输出变量的长度, 类型和内容")])]),t._v(" "),s("li",[s("p",[t._v("打印的信息比 "),s("code",[t._v("print_r()")]),t._v(" 的详细")]),t._v(" "),s("hr")])]),t._v(" "),s("h4",{attrs:{id:"include"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#include"}},[t._v("#")]),t._v(" "),s("code",[t._v("include")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("include()")]),t._v(" 每次执行的时候都会加载一次文件")]),t._v(" "),s("li",[t._v("在用到的时候才加载")]),t._v(" "),s("li",[t._v("如果遇到错误的话, 会给出提示并继续执行下面的代码")])]),t._v(" "),s("h4",{attrs:{id:"require"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#require"}},[t._v("#")]),t._v(" "),s("code",[t._v("require")])]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("require()")]),t._v(" 只有第一次执行的时候才会加载一次")])]),t._v(" "),s("li",[s("p",[t._v("一开始就加载")])]),t._v(" "),s("li",[s("p",[t._v("如果遇到错误的话, 直接抛出致命错误, 下面的代码都不会执行")]),t._v(" "),s("hr")]),t._v(" "),s("li",[s("p",[s("code",[t._v("include_once()")]),t._v(" 和 "),s("code",[t._v("require_once")]),t._v(" 跟上面两个的用法差不多, 只不过是只加载一次")])])]),t._v(" "),s("h2",{attrs:{id:"函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),s("h4",{attrs:{id:"isset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#isset"}},[t._v("#")]),t._v(" "),s("code",[t._v("isset")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("判断变量是否定义, 返回 "),s("code",[t._v("false")]),t._v(" 的有以下几种情况:")]),t._v(" "),s("ul",[s("li",[t._v("变量定义了但是没有赋值")]),t._v(" "),s("li",[t._v("变量值为 "),s("code",[t._v("null")])])])]),t._v(" "),s("li",[s("p",[t._v("其他情况都返回 "),s("code",[t._v("true")])])])]),t._v(" "),s("h4",{attrs:{id:"empty"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#empty"}},[t._v("#")]),t._v(" "),s("code",[t._v("empty")])]),t._v(" "),s("ul",[s("li",[t._v("判断是否为空, 返回 "),s("code",[t._v("true")]),t._v(" 的有以下几种情况:\n"),s("ul",[s("li",[t._v("变量定义了但是没有赋值")]),t._v(" "),s("li",[t._v("变量值为 "),s("code",[t._v("null")])]),t._v(" "),s("li",[t._v("变量值为空字符串")]),t._v(" "),s("li",[t._v("变量值为 "),s("code",[t._v("false")])]),t._v(" "),s("li",[t._v("变量值为 0")]),t._v(" "),s("li",[t._v("变量值为 '0'")])])])]),t._v(" "),s("h4",{attrs:{id:"is-null"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#is-null"}},[t._v("#")]),t._v(" "),s("code",[t._v("is_null")])]),t._v(" "),s("ul",[s("li",[t._v("判断是否为 "),s("code",[t._v("null")]),t._v(", 返回 "),s("code",[t._v("true")]),t._v(" 的有以下几种情况:\n"),s("ul",[s("li",[t._v("变量定义了但是没有赋值")]),t._v(" "),s("li",[t._v("变量值为 "),s("code",[t._v("null")])])])])]),t._v(" "),s("h3",{attrs:{id:"魔术方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#魔术方法"}},[t._v("#")]),t._v(" 魔术方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("__construct()")]),t._v(": 构造函数")]),t._v(" "),s("li",[s("code",[t._v("__destruct()")]),t._v(": 析构函数")]),t._v(" "),s("li",[s("code",[t._v("__call($fun, $args)")]),t._v(": 在对象中调用一个未定义或者不可访问的方法时被调用")]),t._v(" "),s("li",[s("code",[t._v("__callStatic($fun, $args)")]),t._v(": 当调用一个未定义或者是不可访问的静态方法的时候被调用")]),t._v(" "),s("li",[s("code",[t._v("__get($propertyName)")]),t._v(": 获取一个类成员变量时被调用")]),t._v(" "),s("li",[s("code",[t._v("__set($property, $value)")]),t._v(": 设置一个类成员变量时被调用")]),t._v(" "),s("li",[s("code",[t._v("__isset($content)")]),t._v(": 当调用 "),s("code",[t._v("isset")]),t._v(" 或者 "),s("code",[t._v("empty")]),t._v(" 对一个未定义或者不可访问的成员赋值时被调用")]),t._v(" "),s("li",[s("code",[t._v("__unset($content)")]),t._v(": 当调用 "),s("code",[t._v("reset")]),t._v(" 对一个未定义或者不可访问的成员更新时被调用")]),t._v(" "),s("li",[s("code",[t._v("__sleep()")]),t._v(": 执行 "),s("code",[t._v("serialize")]),t._v(" 时, 会先调用这个函数")]),t._v(" "),s("li",[s("code",[t._v("__wakeup()")]),t._v(": 执行 "),s("code",[t._v("unserialize")]),t._v(" 时, 会先调用这个函数")]),t._v(" "),s("li",[s("code",[t._v("__toString()")]),t._v(": 当使用 "),s("code",[t._v("echo")]),t._v(" 方法直接输出对象时被调用")]),t._v(" "),s("li",[s("code",[t._v("__invoke()")]),t._v(": 当使用调用函数访问一个对象时该方法会首先被调用")]),t._v(" "),s("li",[s("code",[t._v("__set_state($an_array)")]),t._v(": 调用 "),s("code",[t._v("var_export")]),t._v(" 导出类时被调用")]),t._v(" "),s("li",[s("code",[t._v("__clone()")]),t._v(": 当对象被复制赋值时该方法被调用")]),t._v(" "),s("li",[s("code",[t._v("__autoload($className)")]),t._v(": 尝试加载一个未定义的类时被调用")]),t._v(" "),s("li",[s("code",[t._v("__debuginfo")]),t._v(": 输出 "),s("code",[t._v("debug")]),t._v(" 信息时被调用")])]),t._v(" "),s("h3",{attrs:{id:"oop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#oop"}},[t._v("#")]),t._v(" OOP")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("self")]),t._v(" 是对当前类的静态引用, 取决于定义当前方法所在的类. 即 "),s("code",[t._v("self")]),t._v(" 写在哪个类, 它就指的是谁. 可以用于访问类的静态属性, 静态方法和常量")]),t._v(" "),s("li",[s("code",[t._v("$this")]),t._v(" 指的是实际调用的对象, 哪个对象调用, 他就指的是谁. 但是 "),s("code",[t._v("$this")]),t._v(" 不能访问类中的静态属性和常量, 且不能存在于静态方法中")]),t._v(" "),s("li",[s("code",[t._v("static")]),t._v(" 除了可以声明类的静态成员 (属性和方法) 外, 还可以用于后期静态绑定. 可以用于静态或者非静态方法中, 也可以访问类的静态属性, 静态方法, 常量和非静态方法, 但是不能访问非静态属性. 静态调用时, "),s("code",[t._v("static")]),t._v(" 指向的是实际调用的类, 非静态调用时, "),s("code",[t._v("static")]),t._v(" 指向的是实际调用时对象所属的类")])]),t._v(" "),s("RightMenu")],1)}),[],!1,null,null,null);a.default=e.exports}}]);